State 1 conflicts: 2 shift/reduce, 27 reduce/reduce
State 103 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: ID
    3    | lvalue
    4    | NIL
    5    | INT
    6    | STRING
    7    | MINUS exp
    8    | LPAREN RPAREN
    9    | LPAREN exps RPAREN
   10    | ID LPAREN args RPAREN
   11    | ty LBRACE assigns RBRACE
   12    | ID LBRACE assigns RBRACE
   13    | ID LBRACK exp RBRACK OF exp
   14    | lvalue ASSIGN exp
   15    | forloop
   16    | whileloop
   17    | selection
   18    | BREAK
   19    | LET decs IN exps END
   20    | exp MINUS exp
   21    | exp DIVIDE exp
   22    | exp TIMES exp
   23    | exp EQ exp
   24    | exp NEQ exp
   25    | exp GT exp
   26    | exp LT exp
   27    | exp GE exp
   28    | exp LE exp
   29    | exp AND exp
   30    | exp OR exp
   31    | exp PLUS exp

   32 exps: exp
   33     | exps SEMICOLON exp

   34 args: exp
   35     | args COMMA exp

   36 assign: /* empty */
   37       | COMMA ID EQ exp assign

   38 assigns: /* empty */
   39        | ID EQ exp assign

   40 decs: decs dec
   41     | dec

   42 dec: tydec
   43    | vardec
   44    | fundec

   45 tydec: TYPE ID EQ ty

   46 ty: ID
   47   | LBRACE tyfields RBRACE
   48   | ARRAY OF ID

   49 tyfields: tyfield
   50         | tyfields COMMA tyfield

   51 tyfield: ID COLON ID

   52 vardec: VAR ID ASSIGN exp
   53       | VAR ID COLON ID ASSIGN exp

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   55       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   56 lvalue: ID
   57       | lvalue DOT ID
   58       | lvalue LBRACK exp RBRACK
   59       | ID LBRACK exp RBRACK

   60 forloop: FOR ID ASSIGN exp TO exp DO exp

   61 whileloop: WHILE exp DO exp

   62 selection: IF exp THEN exp
   63          | IF exp THEN exp ELSE exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 10 12 13 37 39 45 46 48 51 52 53 54 55 56 57 59 60
STRING (259) 6
INT (260) 5
COMMA (261) 35 37 50
COLON (262) 51 53 55
SEMICOLON (263) 33
LPAREN (264) 8 9 10 54 55
RPAREN (265) 8 9 10 54 55
LBRACK (266) 13 58 59
RBRACK (267) 13 58 59
LBRACE (268) 11 12 47
RBRACE (269) 11 12 47
DOT (270) 57
PLUS (271) 31
MINUS (272) 7 20
TIMES (273) 22
DIVIDE (274) 21
EQ (275) 23 37 39 45 54 55
NEQ (276) 24
LT (277) 26
LE (278) 28
GT (279) 25
GE (280) 27
AND (281) 29
OR (282) 30
ASSIGN (283) 14 52 53 60
ARRAY (284) 48
IF (285) 62 63
THEN (286) 62 63
ELSE (287) 63
WHILE (288) 61
FOR (289) 60
TO (290) 60
DO (291) 60 61
LET (292) 19
IN (293) 19
END (294) 19
OF (295) 13 48
BREAK (296) 18
NIL (297) 4
FUNCTION (298) 54 55
VAR (299) 52 53
TYPE (300) 45


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31, on right: 1 7 13 14 20 21 22 23 24
    25 26 27 28 29 30 31 32 33 34 35 37 39 52 53 54 55 58 59 60 61
    62 63
exps (49)
    on left: 32 33, on right: 9 19 33
args (50)
    on left: 34 35, on right: 10 35
assign (51)
    on left: 36 37, on right: 37 39
assigns (52)
    on left: 38 39, on right: 11 12
decs (53)
    on left: 40 41, on right: 19 40
dec (54)
    on left: 42 43 44, on right: 40 41
tydec (55)
    on left: 45, on right: 42
ty (56)
    on left: 46 47 48, on right: 11 45
tyfields (57)
    on left: 49 50, on right: 47 50 54 55
tyfield (58)
    on left: 51, on right: 49 50
vardec (59)
    on left: 52 53, on right: 43
fundec (60)
    on left: 54 55, on right: 44
lvalue (61)
    on left: 56 57 58 59, on right: 3 14 57 58
forloop (62)
    on left: 60, on right: 15
whileloop (63)
    on left: 61, on right: 16
selection (64)
    on left: 62 63, on right: 17


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    program    go to state 14
    exp        go to state 15
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 1

    2 exp: ID .
   10    | ID . LPAREN args RPAREN
   12    | ID . LBRACE assigns RBRACE
   13    | ID . LBRACK exp RBRACK OF exp
   46 ty: ID .
   56 lvalue: ID .
   59       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 21
    LBRACK  shift, and go to state 22
    LBRACE  shift, and go to state 23

    $end       reduce using rule 2 (exp)
    $end       [reduce using rule 56 (lvalue)]
    COMMA      reduce using rule 2 (exp)
    COMMA      [reduce using rule 56 (lvalue)]
    SEMICOLON  reduce using rule 2 (exp)
    SEMICOLON  [reduce using rule 56 (lvalue)]
    RPAREN     reduce using rule 2 (exp)
    RPAREN     [reduce using rule 56 (lvalue)]
    LBRACK     [reduce using rule 56 (lvalue)]
    RBRACK     reduce using rule 2 (exp)
    RBRACK     [reduce using rule 56 (lvalue)]
    LBRACE     [reduce using rule 46 (ty)]
    RBRACE     reduce using rule 2 (exp)
    RBRACE     [reduce using rule 56 (lvalue)]
    DOT        reduce using rule 56 (lvalue)
    PLUS       reduce using rule 2 (exp)
    PLUS       [reduce using rule 56 (lvalue)]
    MINUS      reduce using rule 2 (exp)
    MINUS      [reduce using rule 56 (lvalue)]
    TIMES      reduce using rule 2 (exp)
    TIMES      [reduce using rule 56 (lvalue)]
    DIVIDE     reduce using rule 2 (exp)
    DIVIDE     [reduce using rule 56 (lvalue)]
    EQ         reduce using rule 2 (exp)
    EQ         [reduce using rule 56 (lvalue)]
    NEQ        reduce using rule 2 (exp)
    NEQ        [reduce using rule 56 (lvalue)]
    LT         reduce using rule 2 (exp)
    LT         [reduce using rule 56 (lvalue)]
    LE         reduce using rule 2 (exp)
    LE         [reduce using rule 56 (lvalue)]
    GT         reduce using rule 2 (exp)
    GT         [reduce using rule 56 (lvalue)]
    GE         reduce using rule 2 (exp)
    GE         [reduce using rule 56 (lvalue)]
    AND        reduce using rule 2 (exp)
    AND        [reduce using rule 56 (lvalue)]
    OR         reduce using rule 2 (exp)
    OR         [reduce using rule 56 (lvalue)]
    ASSIGN     reduce using rule 56 (lvalue)
    THEN       reduce using rule 2 (exp)
    THEN       [reduce using rule 56 (lvalue)]
    ELSE       reduce using rule 2 (exp)
    ELSE       [reduce using rule 56 (lvalue)]
    TO         reduce using rule 2 (exp)
    TO         [reduce using rule 56 (lvalue)]
    DO         reduce using rule 2 (exp)
    DO         [reduce using rule 56 (lvalue)]
    IN         reduce using rule 2 (exp)
    IN         [reduce using rule 56 (lvalue)]
    END        reduce using rule 2 (exp)
    END        [reduce using rule 56 (lvalue)]
    FUNCTION   reduce using rule 2 (exp)
    FUNCTION   [reduce using rule 56 (lvalue)]
    VAR        reduce using rule 2 (exp)
    VAR        [reduce using rule 56 (lvalue)]
    TYPE       reduce using rule 2 (exp)
    TYPE       [reduce using rule 56 (lvalue)]
    $default   reduce using rule 2 (exp)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    8 exp: LPAREN . RPAREN
    9    | LPAREN . exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 24
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 25
    exps       go to state 26
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 5

   47 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 27

    tyfields  go to state 28
    tyfield   go to state 29


state 6

    7 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 30
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 7

   48 ty: ARRAY . OF ID

    OF  shift, and go to state 31


state 8

   62 selection: IF . exp THEN exp
   63          | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 32
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 9

   61 whileloop: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 33
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 10

   60 forloop: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 34


state 11

   19 exp: LET . decs IN exps END

    FUNCTION  shift, and go to state 35
    VAR       shift, and go to state 36
    TYPE      shift, and go to state 37

    decs    go to state 38
    dec     go to state 39
    tydec   go to state 40
    vardec  go to state 41
    fundec  go to state 42


state 12

   18 exp: BREAK .

    $default  reduce using rule 18 (exp)


state 13

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


state 14

    0 $accept: program . $end

    $end  shift, and go to state 43


state 15

    1 program: exp .
   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 1 (program)


state 16

   11 exp: ty . LBRACE assigns RBRACE

    LBRACE  shift, and go to state 56


state 17

    3 exp: lvalue .
   14    | lvalue . ASSIGN exp
   57 lvalue: lvalue . DOT ID
   58       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 57
    DOT     shift, and go to state 58
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 3 (exp)


state 18

   15 exp: forloop .

    $default  reduce using rule 15 (exp)


state 19

   16 exp: whileloop .

    $default  reduce using rule 16 (exp)


state 20

   17 exp: selection .

    $default  reduce using rule 17 (exp)


state 21

   10 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 60
    args       go to state 61
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 22

   13 exp: ID LBRACK . exp RBRACK OF exp
   59 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 62
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 23

   12 exp: ID LBRACE . assigns RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 38 (assigns)

    assigns  go to state 64


state 24

    8 exp: LPAREN RPAREN .

    $default  reduce using rule 8 (exp)


state 25

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   32 exps: exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 32 (exps)


state 26

    9 exp: LPAREN exps . RPAREN
   33 exps: exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 65
    RPAREN     shift, and go to state 66


state 27

   51 tyfield: ID . COLON ID

    COLON  shift, and go to state 67


state 28

   47 ty: LBRACE tyfields . RBRACE
   50 tyfields: tyfields . COMMA tyfield

    COMMA   shift, and go to state 68
    RBRACE  shift, and go to state 69


state 29

   49 tyfields: tyfield .

    $default  reduce using rule 49 (tyfields)


state 30

    7 exp: MINUS exp .
   20    | exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 7 (exp)


state 31

   48 ty: ARRAY OF . ID

    ID  shift, and go to state 70


state 32

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   62 selection: IF exp . THEN exp
   63          | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    THEN    shift, and go to state 71


state 33

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   61 whileloop: WHILE exp . DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    DO      shift, and go to state 72


state 34

   60 forloop: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 73


state 35

   54 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   55       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 74


state 36

   52 vardec: VAR . ID ASSIGN exp
   53       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 75


state 37

   45 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 76


state 38

   19 exp: LET decs . IN exps END
   40 decs: decs . dec

    IN        shift, and go to state 77
    FUNCTION  shift, and go to state 35
    VAR       shift, and go to state 36
    TYPE      shift, and go to state 37

    dec     go to state 78
    tydec   go to state 40
    vardec  go to state 41
    fundec  go to state 42


state 39

   41 decs: dec .

    $default  reduce using rule 41 (decs)


state 40

   42 dec: tydec .

    $default  reduce using rule 42 (dec)


state 41

   43 dec: vardec .

    $default  reduce using rule 43 (dec)


state 42

   44 dec: fundec .

    $default  reduce using rule 44 (dec)


state 43

    0 $accept: program $end .

    $default  accept


state 44

   31 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 79
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 45

   20 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 80
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 46

   22 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 81
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 47

   21 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 82
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 48

   23 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 83
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 49

   24 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 84
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 50

   26 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 85
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 51

   28 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 86
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 52

   25 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 87
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 53

   27 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 88
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 54

   29 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 89
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 55

   30 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 90
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 56

   11 exp: ty LBRACE . assigns RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 38 (assigns)

    assigns  go to state 91


state 57

   58 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 92
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 58

   57 lvalue: lvalue DOT . ID

    ID  shift, and go to state 93


state 59

   14 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 94
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 60

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   34 args: exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 34 (args)


state 61

   10 exp: ID LPAREN args . RPAREN
   35 args: args . COMMA exp

    COMMA   shift, and go to state 95
    RPAREN  shift, and go to state 96


state 62

   13 exp: ID LBRACK exp . RBRACK OF exp
   20    | exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   59 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 97
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55


state 63

   39 assigns: ID . EQ exp assign

    EQ  shift, and go to state 98


state 64

   12 exp: ID LBRACE assigns . RBRACE

    RBRACE  shift, and go to state 99


state 65

   33 exps: exps SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 100
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 66

    9 exp: LPAREN exps RPAREN .

    $default  reduce using rule 9 (exp)


state 67

   51 tyfield: ID COLON . ID

    ID  shift, and go to state 101


state 68

   50 tyfields: tyfields COMMA . tyfield

    ID  shift, and go to state 27

    tyfield  go to state 102


state 69

   47 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 47 (ty)


state 70

   48 ty: ARRAY OF ID .

    $default  reduce using rule 48 (ty)


state 71

   62 selection: IF exp THEN . exp
   63          | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 103
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 72

   61 whileloop: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 104
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 73

   60 forloop: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 105
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 74

   54 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   55       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 106


state 75

   52 vardec: VAR ID . ASSIGN exp
   53       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 107
    ASSIGN  shift, and go to state 108


state 76

   45 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 109


state 77

   19 exp: LET decs IN . exps END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 25
    exps       go to state 110
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 78

   40 decs: decs dec .

    $default  reduce using rule 40 (decs)


state 79

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   31    | exp PLUS exp .

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 31 (exp)


state 80

   20 exp: exp . MINUS exp
   20    | exp MINUS exp .
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 20 (exp)


state 81

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   22    | exp TIMES exp .
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    $default  reduce using rule 22 (exp)


state 82

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   21    | exp DIVIDE exp .
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    $default  reduce using rule 21 (exp)


state 83

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   23    | exp EQ exp .
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 84

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   24    | exp NEQ exp .
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


state 85

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   26    | exp LT exp .
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (exp)


state 86

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   28    | exp LE exp .
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 28 (exp)


state 87

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   25    | exp GT exp .
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


state 88

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   27    | exp GE exp .
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 27 (exp)


state 89

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   29    | exp AND exp .
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53

    $default  reduce using rule 29 (exp)


state 90

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   30    | exp OR exp .
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53

    $default  reduce using rule 30 (exp)


state 91

   11 exp: ty LBRACE assigns . RBRACE

    RBRACE  shift, and go to state 111


state 92

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   58 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 112
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55


state 93

   57 lvalue: lvalue DOT ID .

    $default  reduce using rule 57 (lvalue)


state 94

   14 exp: lvalue ASSIGN exp .
   20    | exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 14 (exp)


state 95

   35 args: args COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 113
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 96

   10 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 10 (exp)


state 97

   13 exp: ID LBRACK exp RBRACK . OF exp
   59 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 114

    $default  reduce using rule 59 (lvalue)


state 98

   39 assigns: ID EQ . exp assign

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 115
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 99

   12 exp: ID LBRACE assigns RBRACE .

    $default  reduce using rule 12 (exp)


state 100

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   33 exps: exps SEMICOLON exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 33 (exps)


state 101

   51 tyfield: ID COLON ID .

    $default  reduce using rule 51 (tyfield)


state 102

   50 tyfields: tyfields COMMA tyfield .

    $default  reduce using rule 50 (tyfields)


state 103

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   62 selection: IF exp THEN exp .
   63          | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    ELSE    shift, and go to state 116

    PLUS      [reduce using rule 62 (selection)]
    MINUS     [reduce using rule 62 (selection)]
    TIMES     [reduce using rule 62 (selection)]
    DIVIDE    [reduce using rule 62 (selection)]
    EQ        [reduce using rule 62 (selection)]
    NEQ       [reduce using rule 62 (selection)]
    LT        [reduce using rule 62 (selection)]
    LE        [reduce using rule 62 (selection)]
    GT        [reduce using rule 62 (selection)]
    GE        [reduce using rule 62 (selection)]
    AND       [reduce using rule 62 (selection)]
    OR        [reduce using rule 62 (selection)]
    ELSE      [reduce using rule 62 (selection)]
    $default  reduce using rule 62 (selection)


state 104

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   61 whileloop: WHILE exp DO exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 61 (whileloop)


state 105

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   60 forloop: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    TO      shift, and go to state 117


state 106

   54 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   55       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 27

    tyfields  go to state 118
    tyfield   go to state 29


state 107

   53 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 119


state 108

   52 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 120
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 109

   45 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 121
    LBRACE  shift, and go to state 5
    ARRAY   shift, and go to state 7

    ty  go to state 122


state 110

   19 exp: LET decs IN exps . END
   33 exps: exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 65
    END        shift, and go to state 123


state 111

   11 exp: ty LBRACE assigns RBRACE .

    $default  reduce using rule 11 (exp)


state 112

   58 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 58 (lvalue)


state 113

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   35 args: args COMMA exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 35 (args)


state 114

   13 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 124
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 115

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   39 assigns: ID EQ exp . assign

    COMMA   shift, and go to state 125
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 36 (assign)

    assign  go to state 126


state 116

   63 selection: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 127
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 117

   60 forloop: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 128
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 118

   50 tyfields: tyfields . COMMA tyfield
   54 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   55       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 68
    RPAREN  shift, and go to state 129


state 119

   53 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 130


state 120

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   52 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 52 (vardec)


state 121

   46 ty: ID .

    $default  reduce using rule 46 (ty)


state 122

   45 tydec: TYPE ID EQ ty .

    $default  reduce using rule 45 (tydec)


state 123

   19 exp: LET decs IN exps END .

    $default  reduce using rule 19 (exp)


state 124

   13 exp: ID LBRACK exp RBRACK OF exp .
   20    | exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 13 (exp)


state 125

   37 assign: COMMA . ID EQ exp assign

    ID  shift, and go to state 131


state 126

   39 assigns: ID EQ exp assign .

    $default  reduce using rule 39 (assigns)


state 127

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   63 selection: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 63 (selection)


state 128

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   60 forloop: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    DO      shift, and go to state 132


state 129

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   55       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 133
    EQ     shift, and go to state 134


state 130

   53 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 135
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 131

   37 assign: COMMA ID . EQ exp assign

    EQ  shift, and go to state 136


state 132

   60 forloop: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 137
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 133

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


state 134

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 139
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 135

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   53 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 53 (vardec)


state 136

   37 assign: COMMA ID EQ . exp assign

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 140
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 137

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   60 forloop: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 60 (forloop)


state 138

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 141


state 139

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   54 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 54 (fundec)


state 140

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   37 assign: COMMA ID EQ exp . assign

    COMMA   shift, and go to state 125
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 36 (assign)

    assign  go to state 142


state 141

   55 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 143
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 142

   37 assign: COMMA ID EQ exp assign .

    $default  reduce using rule 37 (assign)


state 143

   20 exp: exp . MINUS exp
   21    | exp . DIVIDE exp
   22    | exp . TIMES exp
   23    | exp . EQ exp
   24    | exp . NEQ exp
   25    | exp . GT exp
   26    | exp . LT exp
   27    | exp . GE exp
   28    | exp . LE exp
   29    | exp . AND exp
   30    | exp . OR exp
   31    | exp . PLUS exp
   55 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 55 (fundec)
