State 1 conflicts: 2 shift/reduce
State 104 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | MINUS exp
    7    | LPAREN RPAREN
    8    | LPAREN exps RPAREN
    9    | ID LPAREN args RPAREN
   10    | ty LBRACE assigns RBRACE
   11    | ID LBRACE assigns RBRACE
   12    | ID LBRACK exp RBRACK OF exp
   13    | lvalue ASSIGN exp
   14    | forloop
   15    | whileloop
   16    | selection
   17    | BREAK
   18    | LET decs IN exps END
   19    | exp MINUS exp
   20    | exp DIVIDE exp
   21    | exp TIMES exp
   22    | exp EQ exp
   23    | exp NEQ exp
   24    | exp GT exp
   25    | exp LT exp
   26    | exp GE exp
   27    | exp LE exp
   28    | exp AND exp
   29    | exp OR exp
   30    | exp PLUS exp

   31 exps: exp
   32     | exps SEMICOLON exp

   33 args: exp
   34     | args COMMA exp

   35 assign: /* empty */
   36       | COMMA ID EQ exp assign

   37 assigns: /* empty */
   38        | ID EQ exp assign

   39 decs: decs dec
   40     | dec

   41 dec: tydec
   42    | vardec
   43    | fundec

   44 tydec: TYPE ID EQ ty

   45 ty: ID
   46   | LBRACE tyfields RBRACE
   47   | ARRAY OF ID

   48 tyfields: tyfield
   49         | tyfields COMMA tyfield

   50 tyfield: ID COLON ty

   51 vardec: VAR ID ASSIGN exp
   52       | VAR ID COLON ID ASSIGN exp

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   55 lvalue: ID
   56       | lvalue DOT ID
   57       | lvalue LBRACK exp RBRACK
   58       | ID LBRACK exp RBRACK

   59 forloop: FOR ID ASSIGN exp TO exp DO exp

   60 whileloop: WHILE exp DO exp

   61 selection: IF exp THEN exp
   62          | IF exp THEN exp ELSE exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 11 12 36 38 44 45 47 50 51 52 53 54 55 56 58 59
STRING (259) 5
INT (260) 4
COMMA (261) 34 36 49
COLON (262) 50 52 54
SEMICOLON (263) 32
LPAREN (264) 7 8 9 53 54
RPAREN (265) 7 8 9 53 54
LBRACK (266) 12 57 58
RBRACK (267) 12 57 58
LBRACE (268) 10 11 46
RBRACE (269) 10 11 46
DOT (270) 56
PLUS (271) 30
MINUS (272) 6 19
TIMES (273) 21
DIVIDE (274) 20
EQ (275) 22 36 38 44 53 54
NEQ (276) 23
LT (277) 25
LE (278) 27
GT (279) 24
GE (280) 26
AND (281) 28
OR (282) 29
ASSIGN (283) 13 51 52 59
ARRAY (284) 47
IF (285) 61 62
THEN (286) 61 62
ELSE (287) 62
WHILE (288) 60
FOR (289) 59
TO (290) 59
DO (291) 59 60
LET (292) 18
IN (293) 18
END (294) 18
OF (295) 12 47
BREAK (296) 17
NIL (297) 3
FUNCTION (298) 53 54
VAR (299) 51 52
TYPE (300) 44


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 6 12 13 19 20 21 22 23 24
    25 26 27 28 29 30 31 32 33 34 36 38 51 52 53 54 57 58 59 60 61
    62
exps (49)
    on left: 31 32, on right: 8 18 32
args (50)
    on left: 33 34, on right: 9 34
assign (51)
    on left: 35 36, on right: 36 38
assigns (52)
    on left: 37 38, on right: 10 11
decs (53)
    on left: 39 40, on right: 18 39
dec (54)
    on left: 41 42 43, on right: 39 40
tydec (55)
    on left: 44, on right: 41
ty (56)
    on left: 45 46 47, on right: 10 44 50
tyfields (57)
    on left: 48 49, on right: 46 49 53 54
tyfield (58)
    on left: 50, on right: 48 49
vardec (59)
    on left: 51 52, on right: 42
fundec (60)
    on left: 53 54, on right: 43
lvalue (61)
    on left: 55 56 57 58, on right: 2 13 56 57
forloop (62)
    on left: 59, on right: 14
whileloop (63)
    on left: 60, on right: 15
selection (64)
    on left: 61 62, on right: 16


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    program    go to state 14
    exp        go to state 15
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 1

    9 exp: ID . LPAREN args RPAREN
   11    | ID . LBRACE assigns RBRACE
   12    | ID . LBRACK exp RBRACK OF exp
   45 ty: ID .
   55 lvalue: ID .
   58       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 21
    LBRACK  shift, and go to state 22
    LBRACE  shift, and go to state 23

    LBRACK    [reduce using rule 55 (lvalue)]
    LBRACE    [reduce using rule 45 (ty)]
    $default  reduce using rule 55 (lvalue)


state 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 4

    7 exp: LPAREN . RPAREN
    8    | LPAREN . exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 24
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 25
    exps       go to state 26
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 5

   46 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 27

    tyfields  go to state 28
    tyfield   go to state 29


state 6

    6 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 30
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 7

   47 ty: ARRAY . OF ID

    OF  shift, and go to state 31


state 8

   61 selection: IF . exp THEN exp
   62          | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 32
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 9

   60 whileloop: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 33
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 10

   59 forloop: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 34


state 11

   18 exp: LET . decs IN exps END

    FUNCTION  shift, and go to state 35
    VAR       shift, and go to state 36
    TYPE      shift, and go to state 37

    decs    go to state 38
    dec     go to state 39
    tydec   go to state 40
    vardec  go to state 41
    fundec  go to state 42


state 12

   17 exp: BREAK .

    $default  reduce using rule 17 (exp)


state 13

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 14

    0 $accept: program . $end

    $end  shift, and go to state 43


state 15

    1 program: exp .
   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 1 (program)


state 16

   10 exp: ty . LBRACE assigns RBRACE

    LBRACE  shift, and go to state 56


state 17

    2 exp: lvalue .
   13    | lvalue . ASSIGN exp
   56 lvalue: lvalue . DOT ID
   57       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 57
    DOT     shift, and go to state 58
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 2 (exp)


state 18

   14 exp: forloop .

    $default  reduce using rule 14 (exp)


state 19

   15 exp: whileloop .

    $default  reduce using rule 15 (exp)


state 20

   16 exp: selection .

    $default  reduce using rule 16 (exp)


state 21

    9 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 60
    args       go to state 61
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 22

   12 exp: ID LBRACK . exp RBRACK OF exp
   58 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 62
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 23

   11 exp: ID LBRACE . assigns RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 37 (assigns)

    assigns  go to state 64


state 24

    7 exp: LPAREN RPAREN .

    $default  reduce using rule 7 (exp)


state 25

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   31 exps: exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 31 (exps)


state 26

    8 exp: LPAREN exps . RPAREN
   32 exps: exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 65
    RPAREN     shift, and go to state 66


state 27

   50 tyfield: ID . COLON ty

    COLON  shift, and go to state 67


state 28

   46 ty: LBRACE tyfields . RBRACE
   49 tyfields: tyfields . COMMA tyfield

    COMMA   shift, and go to state 68
    RBRACE  shift, and go to state 69


state 29

   48 tyfields: tyfield .

    $default  reduce using rule 48 (tyfields)


state 30

    6 exp: MINUS exp .
   19    | exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 6 (exp)


state 31

   47 ty: ARRAY OF . ID

    ID  shift, and go to state 70


state 32

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   61 selection: IF exp . THEN exp
   62          | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    THEN    shift, and go to state 71


state 33

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   60 whileloop: WHILE exp . DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    DO      shift, and go to state 72


state 34

   59 forloop: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 73


state 35

   53 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 74


state 36

   51 vardec: VAR . ID ASSIGN exp
   52       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 75


state 37

   44 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 76


state 38

   18 exp: LET decs . IN exps END
   39 decs: decs . dec

    IN        shift, and go to state 77
    FUNCTION  shift, and go to state 35
    VAR       shift, and go to state 36
    TYPE      shift, and go to state 37

    dec     go to state 78
    tydec   go to state 40
    vardec  go to state 41
    fundec  go to state 42


state 39

   40 decs: dec .

    $default  reduce using rule 40 (decs)


state 40

   41 dec: tydec .

    $default  reduce using rule 41 (dec)


state 41

   42 dec: vardec .

    $default  reduce using rule 42 (dec)


state 42

   43 dec: fundec .

    $default  reduce using rule 43 (dec)


state 43

    0 $accept: program $end .

    $default  accept


state 44

   30 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 79
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 45

   19 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 80
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 46

   21 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 81
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 47

   20 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 82
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 48

   22 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 83
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 49

   23 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 84
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 50

   25 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 85
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 51

   27 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 86
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 52

   24 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 87
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 53

   26 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 88
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 54

   28 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 89
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 55

   29 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 90
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 56

   10 exp: ty LBRACE . assigns RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 37 (assigns)

    assigns  go to state 91


state 57

   57 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 92
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 58

   56 lvalue: lvalue DOT . ID

    ID  shift, and go to state 93


state 59

   13 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 94
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 60

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   33 args: exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 33 (args)


state 61

    9 exp: ID LPAREN args . RPAREN
   34 args: args . COMMA exp

    COMMA   shift, and go to state 95
    RPAREN  shift, and go to state 96


state 62

   12 exp: ID LBRACK exp . RBRACK OF exp
   19    | exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   58 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 97
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55


state 63

   38 assigns: ID . EQ exp assign

    EQ  shift, and go to state 98


state 64

   11 exp: ID LBRACE assigns . RBRACE

    RBRACE  shift, and go to state 99


state 65

   32 exps: exps SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 100
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 66

    8 exp: LPAREN exps RPAREN .

    $default  reduce using rule 8 (exp)


state 67

   50 tyfield: ID COLON . ty

    ID      shift, and go to state 101
    LBRACE  shift, and go to state 5
    ARRAY   shift, and go to state 7

    ty  go to state 102


state 68

   49 tyfields: tyfields COMMA . tyfield

    ID  shift, and go to state 27

    tyfield  go to state 103


state 69

   46 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 46 (ty)


state 70

   47 ty: ARRAY OF ID .

    $default  reduce using rule 47 (ty)


state 71

   61 selection: IF exp THEN . exp
   62          | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 104
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 72

   60 whileloop: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 105
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 73

   59 forloop: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 106
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 74

   53 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 107


state 75

   51 vardec: VAR ID . ASSIGN exp
   52       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 108
    ASSIGN  shift, and go to state 109


state 76

   44 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 110


state 77

   18 exp: LET decs IN . exps END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 25
    exps       go to state 111
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 78

   39 decs: decs dec .

    $default  reduce using rule 39 (decs)


state 79

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   30    | exp PLUS exp .

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 30 (exp)


state 80

   19 exp: exp . MINUS exp
   19    | exp MINUS exp .
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    $default  reduce using rule 19 (exp)


state 81

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   21    | exp TIMES exp .
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    $default  reduce using rule 21 (exp)


state 82

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   20    | exp DIVIDE exp .
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    $default  reduce using rule 20 (exp)


state 83

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   22    | exp EQ exp .
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 84

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   23    | exp NEQ exp .
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 85

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   25    | exp LT exp .
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


state 86

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   27    | exp LE exp .
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 27 (exp)


state 87

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   24    | exp GT exp .
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


state 88

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   26    | exp GE exp .
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (exp)


state 89

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   28    | exp AND exp .
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53

    $default  reduce using rule 28 (exp)


state 90

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   29    | exp OR exp .
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53

    $default  reduce using rule 29 (exp)


state 91

   10 exp: ty LBRACE assigns . RBRACE

    RBRACE  shift, and go to state 112


state 92

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   57 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 113
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55


state 93

   56 lvalue: lvalue DOT ID .

    $default  reduce using rule 56 (lvalue)


state 94

   13 exp: lvalue ASSIGN exp .
   19    | exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 13 (exp)


state 95

   34 args: args COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 114
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 96

    9 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 9 (exp)


state 97

   12 exp: ID LBRACK exp RBRACK . OF exp
   58 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 115

    $default  reduce using rule 58 (lvalue)


state 98

   38 assigns: ID EQ . exp assign

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 116
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 99

   11 exp: ID LBRACE assigns RBRACE .

    $default  reduce using rule 11 (exp)


state 100

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   32 exps: exps SEMICOLON exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 32 (exps)


state 101

   45 ty: ID .

    $default  reduce using rule 45 (ty)


state 102

   50 tyfield: ID COLON ty .

    $default  reduce using rule 50 (tyfield)


state 103

   49 tyfields: tyfields COMMA tyfield .

    $default  reduce using rule 49 (tyfields)


state 104

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   61 selection: IF exp THEN exp .
   62          | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    ELSE    shift, and go to state 117

    PLUS      [reduce using rule 61 (selection)]
    MINUS     [reduce using rule 61 (selection)]
    TIMES     [reduce using rule 61 (selection)]
    DIVIDE    [reduce using rule 61 (selection)]
    EQ        [reduce using rule 61 (selection)]
    NEQ       [reduce using rule 61 (selection)]
    LT        [reduce using rule 61 (selection)]
    LE        [reduce using rule 61 (selection)]
    GT        [reduce using rule 61 (selection)]
    GE        [reduce using rule 61 (selection)]
    AND       [reduce using rule 61 (selection)]
    OR        [reduce using rule 61 (selection)]
    ELSE      [reduce using rule 61 (selection)]
    $default  reduce using rule 61 (selection)


state 105

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   60 whileloop: WHILE exp DO exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 60 (whileloop)


state 106

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   59 forloop: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    TO      shift, and go to state 118


state 107

   53 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 27

    tyfields  go to state 119
    tyfield   go to state 29


state 108

   52 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 120


state 109

   51 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 121
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 110

   44 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 101
    LBRACE  shift, and go to state 5
    ARRAY   shift, and go to state 7

    ty  go to state 122


state 111

   18 exp: LET decs IN exps . END
   32 exps: exps . SEMICOLON exp

    SEMICOLON  shift, and go to state 65
    END        shift, and go to state 123


state 112

   10 exp: ty LBRACE assigns RBRACE .

    $default  reduce using rule 10 (exp)


state 113

   57 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 57 (lvalue)


state 114

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   34 args: args COMMA exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 34 (args)


state 115

   12 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 124
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 116

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   38 assigns: ID EQ exp . assign

    COMMA   shift, and go to state 125
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 35 (assign)

    assign  go to state 126


state 117

   62 selection: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 127
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 118

   59 forloop: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 128
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 119

   49 tyfields: tyfields . COMMA tyfield
   53 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 68
    RPAREN  shift, and go to state 129


state 120

   52 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 130


state 121

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   51 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 51 (vardec)


state 122

   44 tydec: TYPE ID EQ ty .

    $default  reduce using rule 44 (tydec)


state 123

   18 exp: LET decs IN exps END .

    $default  reduce using rule 18 (exp)


state 124

   12 exp: ID LBRACK exp RBRACK OF exp .
   19    | exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 12 (exp)


state 125

   36 assign: COMMA . ID EQ exp assign

    ID  shift, and go to state 131


state 126

   38 assigns: ID EQ exp assign .

    $default  reduce using rule 38 (assigns)


state 127

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   62 selection: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 62 (selection)


state 128

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   59 forloop: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55
    DO      shift, and go to state 132


state 129

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 133
    EQ     shift, and go to state 134


state 130

   52 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 135
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 131

   36 assign: COMMA ID . EQ exp assign

    EQ  shift, and go to state 136


state 132

   59 forloop: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 137
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 133

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


state 134

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 139
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 135

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   52 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 52 (vardec)


state 136

   36 assign: COMMA ID EQ . exp assign

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 140
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 137

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   59 forloop: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 59 (forloop)


state 138

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 141


state 139

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 53 (fundec)


state 140

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   36 assign: COMMA ID EQ exp . assign

    COMMA   shift, and go to state 125
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 35 (assign)

    assign  go to state 142


state 141

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    LBRACE  shift, and go to state 5
    MINUS   shift, and go to state 6
    ARRAY   shift, and go to state 7
    IF      shift, and go to state 8
    WHILE   shift, and go to state 9
    FOR     shift, and go to state 10
    LET     shift, and go to state 11
    BREAK   shift, and go to state 12
    NIL     shift, and go to state 13

    exp        go to state 143
    ty         go to state 16
    lvalue     go to state 17
    forloop    go to state 18
    whileloop  go to state 19
    selection  go to state 20


state 142

   36 assign: COMMA ID EQ exp assign .

    $default  reduce using rule 36 (assign)


state 143

   19 exp: exp . MINUS exp
   20    | exp . DIVIDE exp
   21    | exp . TIMES exp
   22    | exp . EQ exp
   23    | exp . NEQ exp
   24    | exp . GT exp
   25    | exp . LT exp
   26    | exp . GE exp
   27    | exp . LE exp
   28    | exp . AND exp
   29    | exp . OR exp
   30    | exp . PLUS exp
   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    DIVIDE  shift, and go to state 47
    EQ      shift, and go to state 48
    NEQ     shift, and go to state 49
    LT      shift, and go to state 50
    LE      shift, and go to state 51
    GT      shift, and go to state 52
    GE      shift, and go to state 53
    AND     shift, and go to state 54
    OR      shift, and go to state 55

    $default  reduce using rule 54 (fundec)
