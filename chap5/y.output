State 8 conflicts: 1 shift/reduce
State 83 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | LPAREN RPAREN
    7    | LPAREN exps RPAREN
    8    | ID LPAREN args RPAREN
    9    | ID LBRACE assigns RBRACE
   10    | ID LBRACK exp RBRACK OF exp
   11    | lvalue ASSIGN exp
   12    | forloop
   13    | whileloop
   14    | selection
   15    | BREAK
   16    | LET decs IN exps END
   17    | MINUS exp
   18    | exp MINUS exp
   19    | exp DIVIDE exp
   20    | exp TIMES exp
   21    | exp EQ exp
   22    | exp NEQ exp
   23    | exp GT exp
   24    | exp LT exp
   25    | exp GE exp
   26    | exp LE exp
   27    | exp AND exp
   28    | exp OR exp
   29    | exp PLUS exp

   30 exps: exp
   31     | exp SEMICOLON exps

   32 args: exp
   33     | exp COMMA args

   34 assign: /* empty */
   35       | COMMA ID EQ exp assign

   36 assigns: /* empty */
   37        | ID EQ exp assign

   38 decs: dec decs
   39     | dec

   40 dec: tydec
   41    | vardec
   42    | fundec

   43 tydec: TYPE ID EQ ty

   44 ty: ID
   45   | LBRACE tyfields RBRACE
   46   | ARRAY OF ID

   47 tyfields: tyfield
   48         | tyfield COMMA tyfields

   49 tyfield: ID COLON ID

   50 vardec: VAR ID ASSIGN exp
   51       | VAR ID COLON ID ASSIGN exp

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   54 lvalue: ID
   55       | lvalue DOT ID
   56       | lvalue LBRACK exp RBRACK
   57       | ID LBRACK exp RBRACK

   58 forloop: FOR ID ASSIGN exp TO exp DO exp

   59 whileloop: WHILE exp DO exp

   60 selection: IF exp THEN exp
   61          | IF exp THEN exp ELSE exp


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMA (258) 33 35 48
COLON (259) 49 51 53
SEMICOLON (260) 31
LPAREN (261) 6 7 8 52 53
RPAREN (262) 6 7 8 52 53
LBRACK (263) 10 56 57
RBRACK (264) 10 56 57
LBRACE (265) 9 45
RBRACE (266) 9 45
DOT (267) 55
ASSIGN (268) 11 50 51 58
ARRAY (269) 46
IF (270) 60 61
THEN (271) 60 61
ELSE (272) 61
WHILE (273) 59
FOR (274) 58
TO (275) 58
DO (276) 58 59
LET (277) 16
IN (278) 16
END (279) 16
OF (280) 10 46
BREAK (281) 15
NIL (282) 3
FUNCTION (283) 52 53
VAR (284) 50 51
TYPE (285) 43
ID (286) 8 9 10 35 37 43 44 46 49 50 51 52 53 54 55 57 58
STRING (287) 5
INT (288) 4
MINUS (289) 17 18
DIVIDE (290) 19
TIMES (291) 20
EQ (292) 21 35 37 43 52 53
NEQ (293) 22
GT (294) 23
LT (295) 24
GE (296) 25
LE (297) 26
AND (298) 27
OR (299) 28
PLUS (300) 29


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 10 11 17 18 19 20 21 22 23 24
    25 26 27 28 29 30 31 32 33 35 37 50 51 52 53 56 57 58 59 60 61
exps (49)
    on left: 30 31, on right: 7 16 31
args (50)
    on left: 32 33, on right: 8 33
assign (51)
    on left: 34 35, on right: 35 37
assigns (52)
    on left: 36 37, on right: 9
decs (53)
    on left: 38 39, on right: 16 38
dec (54)
    on left: 40 41 42, on right: 38 39
tydec (55)
    on left: 43, on right: 40
ty (56)
    on left: 44 45 46, on right: 43
tyfields (57)
    on left: 47 48, on right: 45 48 52 53
tyfield (58)
    on left: 49, on right: 47 48
vardec (59)
    on left: 50 51, on right: 41
fundec (60)
    on left: 52 53, on right: 42
lvalue (61)
    on left: 54 55 56 57, on right: 2 11 55 56
forloop (62)
    on left: 58, on right: 12
whileloop (63)
    on left: 59, on right: 13
selection (64)
    on left: 60 61, on right: 14


state 0

    0 $accept: . program $end

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 1

    6 exp: LPAREN . RPAREN
    7    | LPAREN . exps RPAREN

    LPAREN  shift, and go to state 1
    RPAREN  shift, and go to state 18
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 19
    exps       go to state 20
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 2

   60 selection: IF . exp THEN exp
   61          | IF . exp THEN exp ELSE exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 21
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 3

   59 whileloop: WHILE . exp DO exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 22
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 4

   58 forloop: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


state 5

   16 exp: LET . decs IN exps END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    decs    go to state 27
    dec     go to state 28
    tydec   go to state 29
    vardec  go to state 30
    fundec  go to state 31


state 6

   15 exp: BREAK .

    $default  reduce using rule 15 (exp)


state 7

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 8

    8 exp: ID . LPAREN args RPAREN
    9    | ID . LBRACE assigns RBRACE
   10    | ID . LBRACK exp RBRACK OF exp
   54 lvalue: ID .
   57       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 32
    LBRACK  shift, and go to state 33
    LBRACE  shift, and go to state 34

    LBRACK    [reduce using rule 54 (lvalue)]
    $default  reduce using rule 54 (lvalue)


state 9

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 10

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 11

   17 exp: MINUS . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 35
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 12

    0 $accept: program . $end

    $end  shift, and go to state 36


state 13

    1 program: exp .
   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 1 (program)


state 14

    2 exp: lvalue .
   11    | lvalue . ASSIGN exp
   55 lvalue: lvalue . DOT ID
   56       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 49
    DOT     shift, and go to state 50
    ASSIGN  shift, and go to state 51

    $default  reduce using rule 2 (exp)


state 15

   12 exp: forloop .

    $default  reduce using rule 12 (exp)


state 16

   13 exp: whileloop .

    $default  reduce using rule 13 (exp)


state 17

   14 exp: selection .

    $default  reduce using rule 14 (exp)


state 18

    6 exp: LPAREN RPAREN .

    $default  reduce using rule 6 (exp)


state 19

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   30 exps: exp .
   31     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 52
    MINUS      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    TIMES      shift, and go to state 39
    EQ         shift, and go to state 40
    NEQ        shift, and go to state 41
    GT         shift, and go to state 42
    LT         shift, and go to state 43
    GE         shift, and go to state 44
    LE         shift, and go to state 45
    AND        shift, and go to state 46
    OR         shift, and go to state 47
    PLUS       shift, and go to state 48

    $default  reduce using rule 30 (exps)


state 20

    7 exp: LPAREN exps . RPAREN

    RPAREN  shift, and go to state 53


state 21

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   60 selection: IF exp . THEN exp
   61          | IF exp . THEN exp ELSE exp

    THEN    shift, and go to state 54
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 22

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   59 whileloop: WHILE exp . DO exp

    DO      shift, and go to state 55
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 23

   58 forloop: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 56


state 24

   52 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 57


state 25

   50 vardec: VAR . ID ASSIGN exp
   51       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 58


state 26

   43 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 59


state 27

   16 exp: LET decs . IN exps END

    IN  shift, and go to state 60


state 28

   38 decs: dec . decs
   39     | dec .

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 39 (decs)

    decs    go to state 61
    dec     go to state 28
    tydec   go to state 29
    vardec  go to state 30
    fundec  go to state 31


state 29

   40 dec: tydec .

    $default  reduce using rule 40 (dec)


state 30

   41 dec: vardec .

    $default  reduce using rule 41 (dec)


state 31

   42 dec: fundec .

    $default  reduce using rule 42 (dec)


state 32

    8 exp: ID LPAREN . args RPAREN

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 62
    args       go to state 63
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 33

   10 exp: ID LBRACK . exp RBRACK OF exp
   57 lvalue: ID LBRACK . exp RBRACK

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 64
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 34

    9 exp: ID LBRACE . assigns RBRACE

    ID  shift, and go to state 65

    $default  reduce using rule 36 (assigns)

    assigns  go to state 66


state 35

   17 exp: MINUS exp .
   18    | exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 17 (exp)


state 36

    0 $accept: program $end .

    $default  accept


state 37

   18 exp: exp MINUS . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 67
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 38

   19 exp: exp DIVIDE . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 68
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 39

   20 exp: exp TIMES . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 69
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 40

   21 exp: exp EQ . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 70
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 41

   22 exp: exp NEQ . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 71
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 42

   23 exp: exp GT . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 72
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 43

   24 exp: exp LT . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 73
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 44

   25 exp: exp GE . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 74
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 45

   26 exp: exp LE . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 75
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 46

   27 exp: exp AND . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 76
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 47

   28 exp: exp OR . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 77
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 48

   29 exp: exp PLUS . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 78
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 49

   56 lvalue: lvalue LBRACK . exp RBRACK

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 50

   55 lvalue: lvalue DOT . ID

    ID  shift, and go to state 80


state 51

   11 exp: lvalue ASSIGN . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 52

   31 exps: exp SEMICOLON . exps

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 19
    exps       go to state 82
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 53

    7 exp: LPAREN exps RPAREN .

    $default  reduce using rule 7 (exp)


state 54

   60 selection: IF exp THEN . exp
   61          | IF exp THEN . exp ELSE exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 55

   59 whileloop: WHILE exp DO . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 56

   58 forloop: FOR ID ASSIGN . exp TO exp DO exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 57

   52 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 86


state 58

   50 vardec: VAR ID . ASSIGN exp
   51       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 87
    ASSIGN  shift, and go to state 88


state 59

   43 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 89


state 60

   16 exp: LET decs IN . exps END

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 19
    exps       go to state 90
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 61

   38 decs: dec decs .

    $default  reduce using rule 38 (decs)


state 62

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   32 args: exp .
   33     | exp . COMMA args

    COMMA   shift, and go to state 91
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 32 (args)


state 63

    8 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 92


state 64

   10 exp: ID LBRACK exp . RBRACK OF exp
   18    | exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   57 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 93
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 65

   37 assigns: ID . EQ exp assign

    EQ  shift, and go to state 94


state 66

    9 exp: ID LBRACE assigns . RBRACE

    RBRACE  shift, and go to state 95


state 67

   18 exp: exp . MINUS exp
   18    | exp MINUS exp .
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 18 (exp)


state 68

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   19    | exp DIVIDE exp .
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    $default  reduce using rule 19 (exp)


state 69

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   20    | exp TIMES exp .
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    $default  reduce using rule 20 (exp)


state 70

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   21    | exp EQ exp .
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 21 (exp)


state 71

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   22    | exp NEQ exp .
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 72

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   23    | exp GT exp .
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 73

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   24    | exp LT exp .
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 24 (exp)


state 74

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   25    | exp GE exp .
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 25 (exp)


state 75

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   26    | exp LE exp .
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    PLUS    shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    GT   error (nonassociative)
    LT   error (nonassociative)
    GE   error (nonassociative)
    LE   error (nonassociative)

    $default  reduce using rule 26 (exp)


state 76

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   27    | exp AND exp .
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    PLUS    shift, and go to state 48

    $default  reduce using rule 27 (exp)


state 77

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   28    | exp OR exp .
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    PLUS    shift, and go to state 48

    $default  reduce using rule 28 (exp)


state 78

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   29    | exp PLUS exp .

    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39

    $default  reduce using rule 29 (exp)


state 79

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   56 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 96
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 80

   55 lvalue: lvalue DOT ID .

    $default  reduce using rule 55 (lvalue)


state 81

   11 exp: lvalue ASSIGN exp .
   18    | exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 11 (exp)


state 82

   31 exps: exp SEMICOLON exps .

    $default  reduce using rule 31 (exps)


state 83

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   60 selection: IF exp THEN exp .
   61          | IF exp THEN exp . ELSE exp

    ELSE    shift, and go to state 97
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    ELSE      [reduce using rule 60 (selection)]
    MINUS     [reduce using rule 60 (selection)]
    DIVIDE    [reduce using rule 60 (selection)]
    TIMES     [reduce using rule 60 (selection)]
    EQ        [reduce using rule 60 (selection)]
    NEQ       [reduce using rule 60 (selection)]
    GT        [reduce using rule 60 (selection)]
    LT        [reduce using rule 60 (selection)]
    GE        [reduce using rule 60 (selection)]
    LE        [reduce using rule 60 (selection)]
    AND       [reduce using rule 60 (selection)]
    OR        [reduce using rule 60 (selection)]
    PLUS      [reduce using rule 60 (selection)]
    $default  reduce using rule 60 (selection)


state 84

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   59 whileloop: WHILE exp DO exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 59 (whileloop)


state 85

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   58 forloop: FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 98
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 86

   52 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 99

    tyfields  go to state 100
    tyfield   go to state 101


state 87

   51 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 102


state 88

   50 vardec: VAR ID ASSIGN . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 103
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 89

   43 tydec: TYPE ID EQ . ty

    LBRACE  shift, and go to state 104
    ARRAY   shift, and go to state 105
    ID      shift, and go to state 106

    ty  go to state 107


state 90

   16 exp: LET decs IN exps . END

    END  shift, and go to state 108


state 91

   33 args: exp COMMA . args

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 62
    args       go to state 109
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 92

    8 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 8 (exp)


state 93

   10 exp: ID LBRACK exp RBRACK . OF exp
   57 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 110

    $default  reduce using rule 57 (lvalue)


state 94

   37 assigns: ID EQ . exp assign

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 111
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 95

    9 exp: ID LBRACE assigns RBRACE .

    $default  reduce using rule 9 (exp)


state 96

   56 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 56 (lvalue)


state 97

   61 selection: IF exp THEN exp ELSE . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 112
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 98

   58 forloop: FOR ID ASSIGN exp TO . exp DO exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 113
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 99

   49 tyfield: ID . COLON ID

    COLON  shift, and go to state 114


state 100

   52 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 115


state 101

   47 tyfields: tyfield .
   48         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 116

    $default  reduce using rule 47 (tyfields)


state 102

   51 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 117


state 103

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   50 vardec: VAR ID ASSIGN exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 50 (vardec)


state 104

   45 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 99

    tyfields  go to state 118
    tyfield   go to state 101


state 105

   46 ty: ARRAY . OF ID

    OF  shift, and go to state 119


state 106

   44 ty: ID .

    $default  reduce using rule 44 (ty)


state 107

   43 tydec: TYPE ID EQ ty .

    $default  reduce using rule 43 (tydec)


state 108

   16 exp: LET decs IN exps END .

    $default  reduce using rule 16 (exp)


state 109

   33 args: exp COMMA args .

    $default  reduce using rule 33 (args)


state 110

   10 exp: ID LBRACK exp RBRACK OF . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 120
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 111

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   37 assigns: ID EQ exp . assign

    COMMA   shift, and go to state 121
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 34 (assign)

    assign  go to state 122


state 112

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   61 selection: IF exp THEN exp ELSE exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 61 (selection)


state 113

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   58 forloop: FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 123
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48


state 114

   49 tyfield: ID COLON . ID

    ID  shift, and go to state 124


state 115

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 125
    EQ     shift, and go to state 126


state 116

   48 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 99

    tyfields  go to state 127
    tyfield   go to state 101


state 117

   51 vardec: VAR ID COLON ID ASSIGN . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 128
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 118

   45 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 129


state 119

   46 ty: ARRAY OF . ID

    ID  shift, and go to state 130


state 120

   10 exp: ID LBRACK exp RBRACK OF exp .
   18    | exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 10 (exp)


state 121

   35 assign: COMMA . ID EQ exp assign

    ID  shift, and go to state 131


state 122

   37 assigns: ID EQ exp assign .

    $default  reduce using rule 37 (assigns)


state 123

   58 forloop: FOR ID ASSIGN exp TO exp DO . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 132
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 124

   49 tyfield: ID COLON ID .

    $default  reduce using rule 49 (tyfield)


state 125

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 133


state 126

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 134
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 127

   48 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 48 (tyfields)


state 128

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   51 vardec: VAR ID COLON ID ASSIGN exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 51 (vardec)


state 129

   45 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 45 (ty)


state 130

   46 ty: ARRAY OF ID .

    $default  reduce using rule 46 (ty)


state 131

   35 assign: COMMA ID . EQ exp assign

    EQ  shift, and go to state 135


state 132

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   58 forloop: FOR ID ASSIGN exp TO exp DO exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 58 (forloop)


state 133

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 136


state 134

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 52 (fundec)


state 135

   35 assign: COMMA ID EQ . exp assign

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 137
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 136

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    LPAREN  shift, and go to state 1
    IF      shift, and go to state 2
    WHILE   shift, and go to state 3
    FOR     shift, and go to state 4
    LET     shift, and go to state 5
    BREAK   shift, and go to state 6
    NIL     shift, and go to state 7
    ID      shift, and go to state 8
    STRING  shift, and go to state 9
    INT     shift, and go to state 10
    MINUS   shift, and go to state 11

    exp        go to state 138
    lvalue     go to state 14
    forloop    go to state 15
    whileloop  go to state 16
    selection  go to state 17


state 137

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   35 assign: COMMA ID EQ exp . assign

    COMMA   shift, and go to state 121
    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 34 (assign)

    assign  go to state 139


state 138

   18 exp: exp . MINUS exp
   19    | exp . DIVIDE exp
   20    | exp . TIMES exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . GT exp
   24    | exp . LT exp
   25    | exp . GE exp
   26    | exp . LE exp
   27    | exp . AND exp
   28    | exp . OR exp
   29    | exp . PLUS exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    MINUS   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    TIMES   shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    GT      shift, and go to state 42
    LT      shift, and go to state 43
    GE      shift, and go to state 44
    LE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    PLUS    shift, and go to state 48

    $default  reduce using rule 53 (fundec)


state 139

   35 assign: COMMA ID EQ exp assign .

    $default  reduce using rule 35 (assign)
